(async()=>{const a=await MONO.initWS().catch(console.log);if(a||console.log("ws: offline mode"),console.log("MONO.paramsWS.online:",MONO.paramsWS.online),a){await MONO.wsGetUpdMeta().catch(console.log);console.log("ws: metadata received for updating"),console.log("MONO.paramsWS.devMode:",MONO.paramsWS.devMode),console.log("MONO.paramsWS.arrMeta:",MONO.paramsWS.arrMeta)}await MONO.initDX().catch(console.log);console.log("MONO.paramsDX.arrMap:",MONO.paramsDX.arrMap),console.log("MONO.paramsDX.sizeUpd:",MONO.paramsDX.sizeUpd),MONO.paramsUpd.cb=(a,o)=>{console.log(`Received ${a} out of ${o}`),console.log("MONO.paramsUpd.sizeProgress:",MONO.paramsUpd.sizeProgress),console.log("MONO.paramsUpd.sizeUpd:",MONO.paramsUpd.sizeUpd)};await MONO.updateMono().catch(console.log);console.log("MONO.paramsUpd.sizeRes:",MONO.paramsUpd.sizeRes),MONO.setSW(),console.log("Start the application (client)");const o=await MONO.get("info.json");if(o){const a=await o.text(),s=await JSON.parse(a),e=await navigator.storage.estimate(),O=MONO.paramsUpd.sizeRes;console.log({...s,...e,sizeRes:O})}})();